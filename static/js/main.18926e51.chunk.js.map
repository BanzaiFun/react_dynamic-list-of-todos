{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setActiveTodo","activeTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","value","setValue","text","setText","onSubmit","e","preventDefault","onChange","event","currentTarget","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","userLoad","setUserLoad","undefined","user","setUser","useEffect","fetchUser","a","userId","href","email","name","App","setTodos","statusFilter","setStatusFilter","textFilter","setTextFilter","visibleTodo","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18926e51.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  setActiveTodo: Dispatch<SetStateAction<null | Todo>>;\n  activeTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setActiveTodo,\n  activeTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={activeTodo?.id === todo.id\n            ? 'has-background-info-light' : ''}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expaÑ‡nded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {activeTodo?.id === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setActiveTodo(null);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setActiveTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  value: string,\n  text:string,\n  setValue: Dispatch<SetStateAction<string>>,\n  setText: Dispatch<SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  value,\n  setValue,\n  text,\n  setText,\n}) => {\n  const onSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={onSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={(event) => setValue(event.currentTarget.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={text}\n          onChange={(e) => setText(e.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {!!text.length && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setText('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, {\n  Dispatch, SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setActiveTodo: Dispatch<SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setActiveTodo }) => {\n  const [userLoad, setUserLoad] = useState(true);\n  const [user, setUser] = useState<User | undefined>(undefined);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setUser(await getUser(todo.userId));\n      setUserLoad(false);\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userLoad ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setActiveTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [textFilter, setTextFilter] = useState('');\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(res => {\n        setTodos(res);\n      });\n  }, []);\n\n  const result = todos.filter(todo => {\n    switch (statusFilter) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return true;\n    }\n  });\n\n  const visibleTodo = result.filter(todo => {\n    return todo.title.toLowerCase().includes(textFilter.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                value={statusFilter}\n                setValue={setStatusFilter}\n                text={textFilter}\n                setText={setTextFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? <Loader /> : (\n                <TodoList\n                  activeTodo={activeTodo}\n                  todos={visibleTodo}\n                  setActiveTodo={setActiveTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {activeTodo !== null && (\n        <TodoModal\n          todo={activeTodo}\n          setActiveTodo={setActiveTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}